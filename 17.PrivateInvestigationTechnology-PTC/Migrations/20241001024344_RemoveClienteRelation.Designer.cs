// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _17.PrivateInvestigationTechnology_PTC.Data;

#nullable disable

namespace _17.PrivateInvestigationTechnology_PTC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241001024344_RemoveClienteRelation")]
    partial class RemoveClienteRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Administrador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("FotoPerfil")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("HojaDeVida")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("IdentityUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NumeroIdentidad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdentityUserId")
                        .IsUnique()
                        .HasFilter("[IdentityUserId] IS NOT NULL");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Auditorium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("IdentityUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id")
                        .HasName("PK_Auditorium");

                    b.HasIndex("IdentityUserId");

                    b.ToTable("Auditoria");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Caso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdDetective")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Caso");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdDetective");

                    b.ToTable("Casos");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IdentityUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IdentityUserId")
                        .IsUnique()
                        .HasFilter("[IdentityUserId] IS NOT NULL");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detalles")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdDetective")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Contrato");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdDetective");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Detective", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("FotoPerfil")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("HojaDeVida")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("IdentityUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NumeroIdentidad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdentityUserId")
                        .IsUnique()
                        .HasFilter("[IdentityUserId] IS NOT NULL");

                    b.ToTable("Detectives");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Evidencium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdCaso")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Evidencium");

                    b.HasIndex("IdCaso");

                    b.ToTable("Evidencias");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("PK_Factura");

                    b.HasIndex("IdCliente");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Formulario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK_Formulario");

                    b.HasIndex("ClienteId");

                    b.ToTable("Formularios");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Historial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Historial");

                    b.HasIndex("IdCliente");

                    b.ToTable("Historiales");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.RegistroCaso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdCaso")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_RegistroCaso");

                    b.HasIndex("IdCaso");

                    b.ToTable("RegistroCasos");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.RegistroMantenimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaFinal")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAdministrador")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_RegistroMantenimiento");

                    b.HasIndex("IdAdministrador");

                    b.ToTable("RegistroMantenimientos");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.TipoEvidencium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdEvidencia")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_TipoEvidencium");

                    b.HasIndex("IdEvidencia");

                    b.ToTable("TipoEvidencias");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("_17.PrivateInvestigationTechnology_PTC.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("_17.PrivateInvestigationTechnology_PTC.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_17.PrivateInvestigationTechnology_PTC.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("_17.PrivateInvestigationTechnology_PTC.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Administrador", b =>
                {
                    b.HasOne("_17.PrivateInvestigationTechnology_PTC.Models.ApplicationUser", "IdentityUser")
                        .WithOne()
                        .HasForeignKey("_17.PrivateInvestigationTechnology_PTC.Models.Administrador", "IdentityUserId");

                    b.Navigation("IdentityUser");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Auditorium", b =>
                {
                    b.HasOne("_17.PrivateInvestigationTechnology_PTC.Models.ApplicationUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("IdentityUserId")
                        .IsRequired()
                        .HasConstraintName("FK_Auditorium_ApplicationUser");

                    b.Navigation("IdentityUser");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Caso", b =>
                {
                    b.HasOne("_17.PrivateInvestigationTechnology_PTC.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Casos")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("FK_Caso_Cliente");

                    b.HasOne("_17.PrivateInvestigationTechnology_PTC.Models.Detective", "IdDetectiveNavigation")
                        .WithMany("Casos")
                        .HasForeignKey("IdDetective")
                        .IsRequired()
                        .HasConstraintName("FK_Caso_Detective");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdDetectiveNavigation");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Cliente", b =>
                {
                    b.HasOne("_17.PrivateInvestigationTechnology_PTC.Models.ApplicationUser", "IdentityUser")
                        .WithOne()
                        .HasForeignKey("_17.PrivateInvestigationTechnology_PTC.Models.Cliente", "IdentityUserId");

                    b.Navigation("IdentityUser");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Contrato", b =>
                {
                    b.HasOne("_17.PrivateInvestigationTechnology_PTC.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Contratos")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("FK_Contrato_Cliente");

                    b.HasOne("_17.PrivateInvestigationTechnology_PTC.Models.Detective", "IdDetectiveNavigation")
                        .WithMany("Contratos")
                        .HasForeignKey("IdDetective")
                        .IsRequired()
                        .HasConstraintName("FK_Contrato_Detective");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdDetectiveNavigation");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Detective", b =>
                {
                    b.HasOne("_17.PrivateInvestigationTechnology_PTC.Models.ApplicationUser", "IdentityUser")
                        .WithOne()
                        .HasForeignKey("_17.PrivateInvestigationTechnology_PTC.Models.Detective", "IdentityUserId");

                    b.Navigation("IdentityUser");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Evidencium", b =>
                {
                    b.HasOne("_17.PrivateInvestigationTechnology_PTC.Models.Caso", "IdCasoNavigation")
                        .WithMany("Evidencia")
                        .HasForeignKey("IdCaso")
                        .IsRequired()
                        .HasConstraintName("FK_Evidencia_Caso");

                    b.Navigation("IdCasoNavigation");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Factura", b =>
                {
                    b.HasOne("_17.PrivateInvestigationTechnology_PTC.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Facturas")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("FK_Factura_Cliente");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Formulario", b =>
                {
                    b.HasOne("_17.PrivateInvestigationTechnology_PTC.Models.Cliente", null)
                        .WithMany("Formularios")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Historial", b =>
                {
                    b.HasOne("_17.PrivateInvestigationTechnology_PTC.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Historials")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("FK_Historial_Cliente");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.RegistroCaso", b =>
                {
                    b.HasOne("_17.PrivateInvestigationTechnology_PTC.Models.Caso", "IdCasoNavigation")
                        .WithMany("RegistroCasos")
                        .HasForeignKey("IdCaso")
                        .IsRequired()
                        .HasConstraintName("FK_RegistroCaso_Caso");

                    b.Navigation("IdCasoNavigation");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.RegistroMantenimiento", b =>
                {
                    b.HasOne("_17.PrivateInvestigationTechnology_PTC.Models.Administrador", "IdAdministradorNavigation")
                        .WithMany("RegistroMantenimientos")
                        .HasForeignKey("IdAdministrador")
                        .IsRequired()
                        .HasConstraintName("FK_RegistroMantenimiento_Administrador");

                    b.Navigation("IdAdministradorNavigation");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.TipoEvidencium", b =>
                {
                    b.HasOne("_17.PrivateInvestigationTechnology_PTC.Models.Evidencium", "IdEvidenciaNavigation")
                        .WithMany("TipoEvidencia")
                        .HasForeignKey("IdEvidencia")
                        .IsRequired()
                        .HasConstraintName("FK_TipoEvidencia_Evidencia");

                    b.Navigation("IdEvidenciaNavigation");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Administrador", b =>
                {
                    b.Navigation("RegistroMantenimientos");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Caso", b =>
                {
                    b.Navigation("Evidencia");

                    b.Navigation("RegistroCasos");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Cliente", b =>
                {
                    b.Navigation("Casos");

                    b.Navigation("Contratos");

                    b.Navigation("Facturas");

                    b.Navigation("Formularios");

                    b.Navigation("Historials");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Detective", b =>
                {
                    b.Navigation("Casos");

                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("_17.PrivateInvestigationTechnology_PTC.Models.Evidencium", b =>
                {
                    b.Navigation("TipoEvidencia");
                });
#pragma warning restore 612, 618
        }
    }
}
